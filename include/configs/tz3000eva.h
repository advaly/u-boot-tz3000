/*
 * TZ3000 Evaluation Board configurations
 *
 * (C) Copyright 2010,2013,2014 Toshiba Corporation
 */

#ifndef __CONFIG_H
#define __CONFIG_H

#define CONFIG_TZ3000
#define CONFIG_TZ3000_EVA

#include <asm/arch/tz3000.h>

/*-----------------------------------------------------------------------
 * Debug options
 */
#define CONFIG_EARLY_DEBUG

#define CONFIG_DISPLAY_CPUINFO
#define CONFIG_DISPLAY_BOARDINFO
#define CONFIG_DISPLAY_BOOTTIME
#define CONFIG_DISPLAY_PERFORMANCE

/*-----------------------------------------------------------------------
 * CPU options
 */
#undef CONFIG_SYS_ICACHE_OFF
#undef CONFIG_SYS_DCACHE_OFF
#define CONFIG_SYS_CACHELINE_SIZE	32

#define CONFIG_SYS_L2CACHE_OFF
#ifndef CONFIG_SYS_L2CACHE_OFF
#define CONFIG_SYS_L2_PL310
#define CONFIG_SYS_PL310_BASE	TZ3000_L2_BASE
#endif

/*-----------------------------------------------------------------------
 * Hardware drivers
 */
#define CONFIG_MII
#define CONFIG_ARP_TIMEOUT		200UL
#define CONFIG_NET_RETRY_COUNT		2

#define CONFIG_TZ3000_EMAC
#if defined(CONFIG_TZ3000_REF4)
#define CONFIG_TZ3000_EMAC_DISABLED
#endif
#define CONFIG_TZ3000_EMAC_EMACDRR	0x0F010000
#define CONFIG_TZ3000_EMAC_FIFOSIZER	0x00000F1F
#if !(defined(CONFIG_TZ3000_REF2) || defined(CONFIG_TZ3000_REF4))
#define CONFIG_TZ3000_RGMII
#endif

#ifdef CONFIG_TZ3000_RGMII
#define CONFIG_TZ3000_PHY_ADDR		3
#else
#define CONFIG_TZ3000_PHY_ADDR		7
#endif

#undef CONFIG_TZ3000_ETH_AUTONEG

#define CONFIG_SYS_NS16550
#define CONFIG_SYS_NS16550_SERIAL
#define CONFIG_SYS_NS16550_REG_SIZE	-4
#define CONFIG_SYS_NS16550_COM1		TZ3000_UART_BASE(0)
#define CONFIG_SYS_NS16550_COM2		TZ3000_UART_BASE(1)
#define CONFIG_SYS_NS16550_COM3		TZ3000_UART_BASE(2)
#define CONFIG_SYS_NS16550_COM4		TZ3000_UART_BASE(3)
#define CONFIG_SYS_NS16550_COM5		TZ3000_UART_BASE(4)
#define CONFIG_SYS_NS16550_CLK		18432000
#ifndef CONFIG_CONS_INDEX
#define CONFIG_CONS_INDEX		1
#endif
#define CONFIG_BAUDRATE			115200
#define CONFIG_SYS_UART_CLK		18432000
#define CONFIG_SYS_CONSOLE_IS_IN_ENV

#define CONFIG_HARD_SPI
#define CONFIG_TZ3000_SPI
#define CONFIG_TZ3000_SPI_DEFAULT_SPR		SPR_40MHZ
#define CONFIG_TZ3000_SPI_SPR_BASE_FREQ		600000000
#if 1 /* REVISIT: limit to 35.29MHz */
#define CONFIG_TZ3000_SPI_MAX_SPEED	(CONFIG_TZ3000_SPI_SPR_BASE_FREQ / 0x11)
#else
#define CONFIG_TZ3000_SPI_MAX_SPEED	(CONFIG_TZ3000_SPI_SPR_BASE_FREQ / 0x06)
#endif
#define CONFIG_TZ3000_SPI_DEFAULT_CS_DEASSERT	100
#define CONFIG_SYS_SPI_READID_HZ	(CONFIG_TZ3000_SPI_SPR_BASE_FREQ / 0x1f)

/* NAND driver set */
#if defined(CONFIG_TZ3000_REF) || \
	defined(CONFIG_TZ3000_REF2) || \
	defined(CONFIG_TZ3000_REF3)
#define CONFIG_TZ3000_HAM_NANDC
#endif

/*-----------------------------------------------------------------------
 * Command line configuration
 */
#include <config_cmd_default.h>
#define CONFIG_CMD_SAVES
#define CONFIG_CMD_UNZIP
#define CONFIG_CMD_MD5SUM
#define CONFIG_CMD_SHA1SUM
#define CONFIG_MD5
#define CONFIG_SHA1

#if defined(CONFIG_TZ3000_EMAC)
#define CONFIG_CMD_PING
#define CONFIG_CMD_MII
#define CONFIG_CMD_TFTPPUT
#endif

#ifdef CONFIG_TZ3000_SPI
#define CONFIG_CMD_SF
#define CONFIG_SF_DEFAULT_SPEED		CONFIG_SYS_SPI_READID_HZ
#define CONFIG_SF_DEFAULT_MODE		SPI_MODE_0
#endif

#ifdef CONFIG_TZ3000_HAM_NANDC
#define CONFIG_CMD_NAND
#define CONFIG_CMD_UBIFS
#define CONFIG_CMD_UBI
#endif

#define CONFIG_CMD_MTDPARTS
#define CONFIG_MTD_DEVICE
#define CONFIG_MTD_PARTITIONS
#undef CONFIG_MTD_DEBUG
#define CONFIG_MTD_DEBUG_VERBOSE MTD_DEBUG_LEVEL0

#ifdef CONFIG_CMD_UBI
#define CONFIG_RBTREE
#define CONFIG_LZO
#endif

#define CONFIG_TZ3000_SDHCI
#if defined(CONFIG_TZ3000_REF2)
#undef CONFIG_TZ3000_SDHCI
#endif
#ifdef CONFIG_TZ3000_SDHCI
#define CONFIG_MMC
#define CONFIG_GENERIC_MMC
#define CONFIG_SDHCI
#define CONFIG_MMC_SDHCI_IO_ACCESSORS
#define CONFIG_MMC_ADMA
#define CONFIG_CMD_MMC
#define CONFIG_CMD_FAT
#define CONFIG_DOS_PARTITION
#endif

#define CONFIG_AUTO_COMPLETE
#define CONFIG_CMDLINE_EDITING
#define CONFIG_DISABLE_REPEATE_COMMAND
#define CONFIG_CMD_SOURCE
#define CONFIG_CMD_ELF
#define CONFIG_CMD_BOOTZ
#undef CONFIG_CMD_XIMG
#define CONFIG_CMD_TIME

#define CONFIG_CMD_SWSUSP
#define CONFIG_LZO

#define CONFIG_HARD_I2C
#define CONFIG_CMD_I2C
#define CONFIG_DW_I2C
#define IC_CLK			50	/* MHz */
#define CONFIG_SYS_I2C_SLAVE	0
#define CONFIG_I2C_MULTI_BUS
#define CONFIG_SYS_I2C_SPEED	400000
#define CONFIG_SYS_I2C_BASE	TZ3000_I2C_BASE(0)
#define CONFIG_SYS_I2C_BASE1	TZ3000_I2C_BASE(1)
#define CONFIG_SYS_I2C_BASE2	TZ3000_I2C_BASE(2)
#define CONFIG_SYS_I2C_BASE3	TZ3000_I2C_BASE(3)
#define CONFIG_SYS_I2C_BASE4	TZ3000_I2C_BASE(4)
#define CONFIG_SYS_I2C_BUS_MAX	5

/*-----------------------------------------------------------------------
 * Miscellaneous configurable options
 */
#define	CONFIG_SYS_LONGHELP

#define	CONFIG_SYS_PROMPT	"u-boot # "
#define	CONFIG_SYS_CBSIZE	1024
#define	CONFIG_SYS_PBSIZE	\
	(CONFIG_SYS_CBSIZE + sizeof(CONFIG_SYS_PROMPT) + 16)
#define	CONFIG_SYS_MAXARGS	16

#define CONFIG_SYS_HZ		1000
#define	CONFIG_TIMESTAMP

#define CONFIG_BOOTDELAY	2
#define CONFIG_ZERO_BOOTDELAY_CHECK

#define CONFIG_SETUP_MEMORY_TAGS
#define CONFIG_CMDLINE_TAG
#define CONFIG_INITRD_TAG

#define CONFIG_BOOTARGS	\
	"root=/dev/mmcblk0p2 rootwait console=ttyS0,115200 smsc95xx.turbo_mode=N"
#define CONFIG_BOOTCOMMAND	\
	"mmcinfo;fatload mmc 0:1 81000000 uImage;bootm 81000000"

#define CONFIG_ETHADDR			00:11:22:33:44:55
#define CONFIG_SERVERIP			192.168.1.1
#define CONFIG_IPADDR			192.168.1.2
#define CONFIG_NETMASK			255.255.255.0

#ifdef CONFIG_TZ3000_EMAC_DISABLED
#define CONFIG_EXTRA_ENV_SETTINGS	\
	"netretry=2\0"
#else
#define CONFIG_EXTRA_ENV_SETTINGS	\
	"ethprime=tz3000\0"		\
	"netretry=2\0"
#endif

#define CONFIG_ENV_OVERWRITE

/*-----------------------------------------------------------------------
 * FLASH and environment organization
 */
#define CONFIG_SPI_FLASH
#define CONFIG_SPI_FLASH_ATMEL
#define CONFIG_SPI_FLASH_MACRONIX
#define CONFIG_SPI_FLASH_SPANSION
#define CONFIG_SPI_FLASH_SST
#define CONFIG_SPI_FLASH_STMICRO
#define CONFIG_SPI_FLASH_WINBOND
#define CONFIG_SPI_FLASH_EON
#define CONFIG_SPI_FLASH_4BYTE_MODE
#undef CONFIG_SPI_FLASH_BAR

#define CONFIG_SYS_FLASH_SPI_HIGH_PERFORMANCE_READ
/* REF4(Manaslu) is not capable of QUAD behavior */
#ifdef CONFIG_TZ3000_REF4
#undef CONFIG_SYS_FLASH_SPI_HIGH_PERFORMANCE_READ
#endif

#define CONFIG_FLASH_SPI_DRIVER
#define CONFIG_FLASH_CFI_MTD

/* CONFIG_SYS_MONITOR_BASE is selected by make target */
#ifndef CONFIG_SYS_MONITOR_BASE
#define CONFIG_SYS_MONITOR_BASE		0x20000000
#endif
#define CONFIG_SYS_MONITOR_LEN		0x80000
#define CONFIG_SYS_FLASH_BASE		CONFIG_SYS_MONITOR_BASE

#if defined(CONFIG_TZ3000_REF2) || defined(CONFIG_TZ3000_REF3) || \
	defined(CONFIG_TZ3000_REF4)
#define CONFIG_SYS_MAX_FLASH_BANKS	1
#else
#define CONFIG_SYS_MAX_FLASH_BANKS	2
#endif
#define CONFIG_SYS_FLASH_OPTIONAL
#if defined(CONFIG_SPI_FLASH_BAR) || defined(CONFIG_SPI_FLASH_4BYTE_MODE)
#define PHYS_FLASH_0_SIZE		0x04000000
#define PHYS_FLASH_1_SIZE		0x04000000
#else
#define PHYS_FLASH_0_SIZE		0x01000000
#define PHYS_FLASH_1_SIZE		0x01000000
#endif
#define PHYS_FLASH_0			0x20000000
#define PHYS_FLASH_1			(PHYS_FLASH_0 + PHYS_FLASH_0_SIZE)
#if CONFIG_SYS_MAX_FLASH_BANKS == 1
#define CONFIG_SYS_FLASH_BANKS_LIST	{ \
		PHYS_FLASH_0, \
	}
#else
#define CONFIG_SYS_FLASH_BANKS_LIST	{ \
		PHYS_FLASH_0, PHYS_FLASH_1, \
	}
#endif
#if defined(CONFIG_SPI_FLASH_BAR) || defined(CONFIG_SPI_FLASH_4BYTE_MODE)
#define CONFIG_SYS_MAX_FLASH_SECT	1024
#else
#define CONFIG_SYS_MAX_FLASH_SECT	256
#endif

#define PHYS_SPIFLASH_0			PHYS_FLASH_0
#define PHYS_SPIFLASH_1			PHYS_FLASH_1
#define CONFIG_SYS_MAX_SPI_FLASH_BANKS	CONFIG_SYS_MAX_FLASH_BANKS
#if CONFIG_SYS_MAX_FLASH_BANKS == 1
#define CONFIG_SYS_SPI_FLASH_BANKS_LIST	{ \
		{PHYS_SPIFLASH_0, PHYS_FLASH_0_SIZE, 0, 0}, \
	}
#define TZ3000_SPI_DIR_MAP_BASE(n)	PHYS_SPIFLASH_0
#define TZ3000_SPI_DIR_MAP_LEN(n)	PHYS_FLASH_0_SIZE
#else
#define CONFIG_SYS_SPI_FLASH_BANKS_LIST	{ \
		{PHYS_SPIFLASH_0, PHYS_FLASH_0_SIZE, 0, 0}, \
		{PHYS_SPIFLASH_1, PHYS_FLASH_1_SIZE, 0, 1}, \
	}
#define TZ3000_SPI_DIR_MAP_BASE(n)	\
	((n) == 0 ? PHYS_SPIFLASH_0 : PHYS_SPIFLASH_1)
#define TZ3000_SPI_DIR_MAP_LEN(n)	\
	((n) == 0 ? PHYS_FLASH_0_SIZE : PHYS_FLASH_1_SIZE)
#endif

#define CONFIG_SYS_MAX_NAND_DEVICE	1
#define CONFIG_SYS_NAND_BASE_LIST	{ TZ3000_HAM_NANDC_BASE }

#define CONFIG_BOARD_EARLY_INIT_F
#define CONFIG_ENV_IS_SELECTABLE
#ifdef CONFIG_ENV_IS_SELECTABLE
#define CONFIG_ENV_IS_IN_FLASH
#ifdef CONFIG_TZ3000_SDHCI
#define CONFIG_ENV_IS_IN_MMC
#endif
#ifdef CONFIG_TZ3000_HAM_NANDC
#define CONFIG_ENV_IS_IN_NAND
#endif
#ifdef CONFIG_TZ3000_SPI
/* #define CONFIG_ENV_IS_IN_SPI_FLASH */
#endif
#define CONFIG_ENV_SIZE			0x20000
#define CONFIG_ENV_SECT_SIZE		CONFIG_ENV_SIZE
#ifdef CONFIG_ENV_IS_IN_FLASH
#define CONFIG_ENV_OFFSET_IN_FLASH	CONFIG_SYS_MONITOR_LEN
#define CONFIG_ENV_ADDR_IN_FLASH	\
	(CONFIG_SYS_MONITOR_BASE + CONFIG_SYS_MONITOR_LEN)
#endif
#ifdef CONFIG_ENV_IS_IN_MMC
#define CONFIG_ENV_OFFSET_IN_MMC	CONFIG_SYS_MONITOR_LEN
#define CONFIG_SYS_MMC_ENV_DEV		tz3000_mmc_boot_dev
#endif
#ifdef CONFIG_ENV_IS_IN_NAND
#define CONFIG_ENV_OFFSET_IN_NAND		CONFIG_SYS_MONITOR_LEN
#define CONFIG_ENV_OFFSET_REDUND_IN_NAND	\
	(CONFIG_SYS_MONITOR_LEN + CONFIG_ENV_SIZE)
#endif
#ifdef CONFIG_ENV_IS_IN_SPI_FLASH
#define CONFIG_ENV_OFFSET_IN_SPI_FLASH		CONFIG_SYS_MONITOR_LEN
#define CONFIG_ENV_ADDR_IN_SPI_FLASH	\
	(CONFIG_SYS_MONITOR_BASE + CONFIG_SYS_MONITOR_LEN)
#endif
#else /* !CONFIG_ENV_IS_SELECTABLE */
#ifdef CONFIG_ENV_IS_NOWHERE
#define CONFIG_ENV_SIZE			0x1000
#elif defined(CONFIG_ENV_IS_IN_MMC)
#define CONFIG_SYS_MMC_ENV_DEV		tz3000_mmc_boot_dev
#define CONFIG_ENV_OFFSET		CONFIG_SYS_MONITOR_LEN
#define CONFIG_ENV_SIZE			0x20000
#elif defined(CONFIG_ENV_IS_IN_NAND)
#define CONFIG_ENV_OFFSET		CONFIG_SYS_MONITOR_LEN
#define CONFIG_ENV_SIZE			0x20000
#define CONFIG_ENV_OFFSET_REDUND	\
	(CONFIG_SYS_MONITOR_LEN + CONFIG_ENV_SIZE)
#elif defined(CONFIG_ENV_IS_IN_SPI_FLASH)
#define CONFIG_ENV_OFFSET		CONFIG_SYS_MONITOR_LEN
#define CONFIG_ENV_ADDR			\
	(CONFIG_SYS_MONITOR_BASE + CONFIG_SYS_MONITOR_LEN)
#define CONFIG_ENV_SIZE			0x20000
#define CONFIG_ENV_SECT_SIZE		CONFIG_ENV_SIZE
#else
#define CONFIG_ENV_IS_IN_FLASH
#define CONFIG_ENV_ADDR			\
	(CONFIG_SYS_MONITOR_BASE + CONFIG_SYS_MONITOR_LEN)
#define CONFIG_ENV_SIZE			0x20000
#endif
#endif /* !CONFIG_ENV_IS_SELECTABLE */
#undef CONFIG_CMD_EXPORTENV
#undef CONFIG_CMD_IMPORTENV

/*-----------------------------------------------------------------------
 * Memory configuration
 */
#define CONFIG_SYS_SDRAM_BASE		0x80000000
#define CONFIG_SYS_SDRAM_SIZE		0x10000000
#define CONFIG_NR_DRAM_BANKS		1
#define UBI_MALLOC_BUFSIZE		(512 * 1024)
#define CONFIG_SYS_MALLOC_LEN	\
	(CONFIG_ENV_SIZE + 512 * 1024 + UBI_MALLOC_BUFSIZE)

#define CONFIG_SYS_GBL_DATA_SIZE	128

#define	CONFIG_SYS_LOAD_ADDR		0x80200000
#define CONFIG_SYS_MEMTEST_START	CONFIG_SYS_LOAD_ADDR
#define CONFIG_SYS_MEMTEST_END		(CONFIG_SYS_MEMTEST_START + 0x10000000)
#define CONFIG_SYS_INIT_SP_ADDR		(CONFIG_SYS_TEXT_BASE - 0x100)

/*-----------------------------------------------------------------------
 * Chip & Board configuration
 */
#define TZ3000_PERIPH_CLK		(600000000 / 16) /* default */
#define TZ3000_HBUS_CLK			100000000
#define TZ3000_EMAC_BUSCLK		200000000

#ifdef CONFIG_TZ3000_REF
#define INIT_PINSHARE0_GPIO_SEL0	0x1020c000
#define INIT_PINSHARE1_GPIO_SEL1	0x0fc02000
#define INIT_PINSHARE3_EMMC2_SEL	0x00000000
#define INIT_HSIO_MUX_CTL		0x0001000e
#define INIT_GLOCKGATEOFF_HSIOSS	0x03030301
#elif defined(CONFIG_TZ3000_REF2)
#define INIT_PINSHARE0_GPIO_SEL0	0x00034000
#define INIT_PINSHARE1_GPIO_SEL1	0x41000000
#define INIT_PINSHARE3_EMMC2_SEL	0x00000000
#define INIT_HSIO_MUX_CTL		0x00010003
#define INIT_GLOCKGATEOFF_HSIOSS	0x00000011
#elif defined(CONFIG_TZ3000_REF3)
#define INIT_PINSHARE0_GPIO_SEL0	0x00004000
#define INIT_PINSHARE1_GPIO_SEL1	0x01400000
#define INIT_PINSHARE3_EMMC2_SEL	0x00000000
#define INIT_HSIO_MUX_CTL		0x00010002
#define INIT_GLOCKGATEOFF_HSIOSS	0x03030301
#elif defined(CONFIG_TZ3000_REF4)
#define INIT_PINSHARE0_GPIO_SEL0	0x1fffff00
#define INIT_PINSHARE1_GPIO_SEL1	0x0001c000
#define INIT_PINSHARE3_EMMC2_SEL	0x00000001
#define INIT_HSIO_MUX_CTL		0x00010002
#define INIT_GLOCKGATEOFF_HSIOSS	0x03030301
#else /* EVA */
#define INIT_PINSHARE0_GPIO_SEL0	0x1020c000
#define INIT_PINSHARE1_GPIO_SEL1	0x0fc1e000
#define INIT_PINSHARE3_EMMC2_SEL	0x00000001
#define INIT_HSIO_MUX_CTL_0		0x00000000
#define INIT_HSIO_MUX_CTL_1		0x0001000f
#define INIT_HSIO_MUX_CTL_2		0x0001000a
#define INIT_HSIO_MUX_CTL_3		0x0001000e
#define INIT_GLOCKGATEOFF_HSIOSS_1	0x03020011
#define INIT_GLOCKGATEOFF_HSIOSS_2	0x00030301
#define INIT_GLOCKGATEOFF_HSIOSS_3	0x03030301
#endif

#if defined(CONFIG_TZ3000_REF)
#define PMU_CLK_EMMC_MASK	0x000f0f /* emmca, emmcb */
#elif defined(CONFIG_TZ3000_REF2)
#define PMU_CLK_EMMC_MASK	0x000000
#elif defined(CONFIG_TZ3000_REF3)
#define PMU_CLK_EMMC_MASK	0x00000f /* emmca */
#elif defined(CONFIG_TZ3000_REF4)
#define PMU_CLK_EMMC_MASK	0x0f000f /* emmca, emmcc */
#else /* EVA */
#define PMU_CLK_EMMC_MASK	0x0f0f0f /* emmca, emmcb, emmcc */
#endif

#ifdef CONFIG_TZ3000_REF
#define INIT_GP_CR0		0x1000c07f
#define INIT_GP_SMP0		0x00000000
#define INIT_GP_ODR0		0x0000003f
#define INIT_GP_ODTP0		0x00000000
#define INIT_GP_PUDEN0		0x1020c0bf
#define INIT_GP_PUDSEL0		0x00000000
#define INIT_GP_INPEN0		0x00200080
#define INIT_GP_CR1		0x0f81e000
#define INIT_GP_SMP1		0x00000000
#define INIT_GP_ODR1		0x00000000
#define INIT_GP_ODTP1		0x00000000
#define INIT_GP_PUDEN1		0x0fc1e000
#define INIT_GP_PUDSEL1		0x00400000
#define INIT_GP_INPEN1		0x00400000
#elif defined(CONFIG_TZ3000_REF2)
#define INIT_GP_CR0		0x00024014
#define INIT_GP_SMP0		0x00000000
#define INIT_GP_ODR0		0x00000014
#define INIT_GP_ODTP0		0x00000000
#define INIT_GP_PUDEN0		0x00004014
#define INIT_GP_PUDSEL0		0x00000000
#define INIT_GP_INPEN0		0x00010000
#define INIT_GP_CR1		0x41000000
#define INIT_GP_SMP1		0x00000000
#define INIT_GP_ODR1		0x40000000
#define INIT_GP_ODTP1		0x00000000
#define INIT_GP_PUDEN1		0x01000000
#define INIT_GP_PUDSEL1		0x00000000
#define INIT_GP_INPEN1		0x00000000
#elif defined(CONFIG_TZ3000_REF3)
#define INIT_GP_CR0		0x00004035
#define INIT_GP_SMP0		0x00000000
#define INIT_GP_ODR0		0x00000035
#define INIT_GP_ODTP0		0x00000000
#define INIT_GP_PUDEN0		0x000040d5
#define INIT_GP_PUDSEL0		0x00000000
#define INIT_GP_INPEN0		0x00000040
#define INIT_GP_CR1		0x01000000
#define INIT_GP_SMP1		0x00000000
#define INIT_GP_ODR1		0x00000000
#define INIT_GP_ODTP1		0x00000000
#define INIT_GP_PUDEN1		0x01400000
#define INIT_GP_PUDSEL1		0x00400000
#define INIT_GP_INPEN1		0x00400000
#elif defined(CONFIG_TZ3000_REF4)
#define INIT_GP_CR0		0x002008e5
#define INIT_GP_SMP0		0x00000000
#define INIT_GP_ODR0		0x00000805
#define INIT_GP_ODTP0		0x00000000
#define INIT_GP_PUDEN0		0x1fc0ef18
#define INIT_GP_PUDSEL0		0x0000e718
#define INIT_GP_INPEN0		0x1fdfe718
#define INIT_GP_CR1		0x00000000
#define INIT_GP_SMP1		0x00000000
#define INIT_GP_ODR1		0x00000000
#define INIT_GP_ODTP1		0x00000000
#define INIT_GP_PUDEN1		0x0001c000
#define INIT_GP_PUDSEL1		0x0001c000
#define INIT_GP_INPEN1		0x00000000
#else /* EVA */
#define INIT_GP_CR0		0x1020c03f
#define INIT_GP_SMP0		0x00000000
#define INIT_GP_ODR0		0x0000003f
#define INIT_GP_ODTP0		0x00000000
#define INIT_GP_PUDEN0		0x1020c03f
#define INIT_GP_PUDSEL0		0x00000000
#define INIT_GP_INPEN0		0x000000c0
#define INIT_GP_CR1		0x0081e000
#define INIT_GP_SMP1		0x00000000
#define INIT_GP_ODR1		0x00000000
#define INIT_GP_ODTP1		0x00000000
#define INIT_GP_PUDEN1		0x0fc1e000
#define INIT_GP_PUDSEL1		0x00400000
#define INIT_GP_INPEN1		0x0f400000
#endif

#ifdef CONFIG_ENV_IS_IN_FLASH
#define NS_TO_HBUS_CYCLE(ns)	NSEC_TO_SCSD(ns, TZ3000_HBUS_CLK)

#define FDEN_SPIFLASH_0	FDEN_16MB
#define FDEN_SPIFLASH_1	FDEN_16MB
#define INIT_SPIC_MEMMAP_0	\
	(FBA(PHYS_SPIFLASH_0) | FDEN(FDEN_SPIFLASH_0) | DIR_ENABLE)
#define INIT_SPIC_DIRECT_0	\
	(SPR(CONFIG_TZ3000_SPI_DEFAULT_SPR) | \
	SCSD(NS_TO_HBUS_CYCLE(CONFIG_TZ3000_SPI_DEFAULT_CS_DEASSERT)) | \
	SDCE(SDCE_NEGEDGE))

#if CONFIG_SYS_MAX_FLASH_BANKS > 1
#define INIT_SPIC_MEMMAP_1	\
	(FBA(PHYS_SPIFLASH_1) | FDEN(FDEN_SPIFLASH_1) | DIR_ENABLE)
#define INIT_SPIC_DIRECT_1	\
	(SPR(CONFIG_TZ3000_SPI_DEFAULT_SPR) | \
	SCSD(NS_TO_HBUS_CYCLE(CONFIG_TZ3000_SPI_DEFAULT_CS_DEASSERT)) | \
	SDCE(SDCE_NEGEDGE))
#endif
#endif /* CONFIG_ENV_IS_IN_FLASH */

#define CONFIG_WATCHDOG
#define CONFIG_CMD_SIMPLEMTEST
#define CONFIG_CMD_LEDSTAT

/*-----------------------------------------------------------------------
 * External functions
 */
#ifndef __ASSEMBLY__
extern void boottime(void);
extern void perftime(void);
extern int tz3000_periph_clk;
extern int tz3000_mmc_boot_dev;
void v7_invalidate_dcache_all(void);
#endif

/*-----------------------------------------------------------------------
 * U-Boot Application options
 */
#undef CONFIG_STANDALONE_ENABLE_CACHE
#define CONFIG_STANDALONE_DISABLE_CACHE
#define CONFIG_STANDALONE_LOAD_ADDR	CONFIG_SYS_LOAD_ADDR

#endif /* __CONFIG_H */
